[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py","pyi","py3","pyw",".pythonstartup",".pythonrc"]
shebangs = ["python"]
roots = [".", "pyproject.toml", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["basedpyright", "ruff", { name = "pylsp", except-features = ["document-symbols", "workspace-symbols", "format"] }] 
indent = { tab-width = 4, unit = "    " }
auto-format = true

[language.formatter]
command = "ruff"

[language-server.pylsp.config.pylsp.plugins]
autopep8.enabled = false
flake8.enabled = false
pycodestyle.enabled = false
pyflakes.enabled = true
pylint.enabled = true
yapf.enabled = false

[language.debugger]
name = "debugpy"
transport = "stdio"
command = "python3"
args = ["-m",  "debugpy.adapter"]

[[language.debugger.templates]]
name = "source"
request = "launch"
completion = [ { name = "entrypoint", completion = "filename", default = "." } ]
args = { mode = "debug", program = "{0}" }

[language-server.basedpyright]
command = "basedpyright-langserver"
args = ["--stdio"]

[language-server.basedpyright.config]

basedpyright.analysis.typeCheckingMode = "standard"
basedpyright.useLibraryCodeForTypes = true

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings]
args = ["--ignore", "E402", "E731"]

[language-server.ruff.config.settings.format]
preview = true

[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown"] }
auto-format = true

[[language]]
name = "latex"
scope = "text.tex.latex"
file-types = ["tex"]
comment-token = "%"
language-servers = ["texlab"]
auto-format = true

[language-server.texlab]
command = "texlab"
args = []

[language-server.texlab.config]
build.onSave = true


[[language]]
name = "java"
scope = "source.java"
injection-regex = "java"
file-types = ["java", "jav", "pde"]
roots = ["pom.xml", "build.gradle", ]
indent = { tab-width = 4, unit = "    " }
language-servers = [ "jdtls" ]

[language-server]
jdtls = { command = "jdtls" }
language-server = { command = "jdtls", args = [
  "-data", "~/.cache/jdtls/workspace"
  ]}

[[language]]
name = "bash"
scope = "source.shell"
injection-regex = "(shell|bash|zsh|sh)"
file-types = [
  "sh",
  "bash",
  "zsh",
  "zshenv",
  "zlogin",
  "zlogout",
  "zprofile",
  "zshrc",
  "eclass",
  "ebuild",
  "bazelrc",
  "Renviron",
  "zsh-theme",
  "ksh",
  "cshrc",
  "tcshrc",
  "bashrc_Apple_Terminal",
  "zshrc_Apple_Terminal",
  { glob = "tmux.conf" },
  { glob = ".bash_history" },
  { glob = ".bash_login" },
  { glob = ".bash_logout" },
  { glob = ".bash_profile" },
  { glob = ".bashrc" },
  { glob = ".profile" },
  { glob = ".zshenv" },
  { glob = ".zlogin" },
  { glob = ".zlogout" },
  { glob = ".zprofile" },
  { glob = ".zshrc" },
  { glob = ".zimrc" },
  { glob = "APKBUILD" },
  { glob = ".bash_aliases" },
  { glob = ".Renviron" },
  { glob = ".xprofile" },
  { glob = ".xsession" },
  { glob = ".xsessionrc" },
  { glob = ".yashrc" },
  { glob = ".yash_profile" },
  { glob = ".hushlogin" },
]
comment-token = "#"
indent = { tab-width = 4, unit = " " }
formatter = { command = "shfmt", args = ["--stdin"] }
language-servers = ["bash-language-server"]

[[language]]
name = "c"
file-types = ["c", "h"]
formatter = { command = 'clang-format' }
auto-format = false

[[language]]
name = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "ino", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", { glob = ".hpp.in" }, { glob = ".h.in" }]
language-servers = ["clangd"] 
formatter = { command = "clang-format", args = ["--style={IndentWidth: 4, UseTab: Always}"] }
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 4, unit = "    " }
auto-format = true

[language.debugger]
name = "lldb-dap"
transport = "stdio"
command = "/Applications/Xcode.app/Contents/Developer/usr/bin/lldb-dap"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [ { name = "binary", completion = "filename" } ]
args = { console = "internalConsole", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = [ "pid" ]
args = { console = "internalConsole", pid = "{0}" }

[[language.debugger.templates]]
name = "gdbserver attach"
request = "attach"
completion = [ { name = "lldb connect url", default = "connect://localhost:3333" }, { name = "file", completion = "filename" }, "pid" ]
args = { console = "internalConsole", attachCommands = [ "platform select remote-gdb-server", "platform connect {0}", "file {1}", "attach {2}" ] }

[[language]]
name = "cmake"
auto-format = true
language-servers = [{ name = "neocmakelsp" }]

[language-server.neocmakelsp]
command = "neocmakelsp"
args = ["--stdio"]
